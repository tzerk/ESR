% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_Spectrum.R
\name{plot_Spectrum}
\alias{plot_Spectrum}
\title{Plot ESR spectra and peak finding}
\usage{
plot_Spectrum(data, stacked = FALSE, normalise = FALSE, crop = TRUE,
  y_scale_factor = 2, vertical_lines, vertical_lines_manual,
  col_bg = "grey90", manual_shift, manual_shift_global,
  difference = FALSE, integrate = FALSE, smooth.spline = FALSE,
  smooth.spline.df, smooth.spline.diff.df, overlay = TRUE,
  auto.shift = FALSE, shift.method = "ccf", find.peaks = FALSE,
  peak.range, peak.threshold = 10, peak.information = FALSE,
  info = NULL, plot = TRUE, add = FALSE, ...)
}
\arguments{
\item{data}{\code{\link{data.frame}} (\bold{required}): data frame
with two columns for x=magnetic.field or g.value, y=ESR.intensity.}

\item{stacked}{\code{\link{logical}} (\emph{with default}):
If \code{TRUE} this function produces a stacked plot where each spectrum is
plotted on top of each other. Use \code{y_scale_factor} to adjust the y-axis
scaling. Defaults to \code{FALSE}.}

\item{normalise}{\code{\link{logical}} (\emph{with default}):
If \code{TRUE} each spectrum is normalised by its individual maximum intensity
value. This is useful to compare the spectrums structure by eliminating
relative intensity variations. Requires \code{stacked = TRUE}. Defaults to \code{FALSE}.}

\item{crop}{\code{\link{logical}} (\emph{with default}):
If \code{TRUE} all spectra are cropped to the specified \code{xlim} range before
applying any further signal processing (e.g. normalisation). Useful when
plotting spectra with different scan widths. Defaults to \code{TRUE}.}

\item{y_scale_factor}{\code{\link{numeric}} (\emph{with default}):
A positive single numeric value that determines the scaling of the y-axis when
\code{stacked = TRUE}. Lower values will bring the spectra closer to each other,
potentially making them overlap each other. Increasing the value will
increase the distance and flatten the spectra. Defaults to \code{2}.}

\item{vertical_lines}{\code{\link{numeric}} (\emph{optional}):
Add vertical dashed lines at specified x-axis values. See \code{\link[=abline]{abline()}}.}

\item{vertical_lines_manual}{\code{\link{list}} (\emph{optional}):
A \code{list} of vectors of \code{numeric} values to draw custom vertical lines
in the plot. Each vector should be of the same length as the number of
spectra provided. Each value indicates where a vertical line is drawn
in the spectrum, starting from the bottom to the top. Example: \code{data} is
a list with three spectra. To connect the three spectra with a vertical line
use e.g. \code{vertical_lines_manual = list(c(3455, 3460, 3456))}. Useful, if
the spectra are not perfectly aligned and you want to connect a particular
are of interest with lines.}

\item{col_bg}{\code{\link{character}} (\emph{with default}):
If more than one spectrum is provided the background is \code{grey90} by default.}

\item{manual_shift}{\code{\link{numeric}} (\emph{optional}):
If all of the \code{auto.shift} methods fail to properly align all of the
provided spectra use \code{manual_shift} to align them manually. This should be
a vector of negative or positive \code{numeric} values the same length as the
number of provided spectra. Example: \code{data} is a list with three spectra.
To shift the spectra use e.g. \code{manual_shift = c(-2, 0, 0.2)}, which aligns
the first spectrum by \code{-2} to the left and the third by \code{0.2} to the right.}

\item{manual_shift_global}{\code{\link{numeric}} (\emph{optional}):
The same as \code{manual_shift}, but shifting all spectra by one single value.
Useful to shift spectra according to a calibration measurement. The correction
is applied after individual shifts of \code{manual_shift}, so it is possible
to individually AND globally shift the spectra for proper alignment.}

\item{difference}{\code{\link{logical}} (with default): plot first
derivative of the spectrum}

\item{integrate}{\code{\link{logical}} (with default): plot integrand of the
spectrum}

\item{smooth.spline}{\code{\link{logical}} (with default): fit a cubic
smoothing spline to supplied spectrum.}

\item{smooth.spline.df}{\code{\link{integer}}: desired number of degrees of
freedom}

\item{smooth.spline.diff.df}{\code{\link{integer}}: desired number of
degrees of freedom for splines of the first derivative}

\item{overlay}{\code{\link{logical}} (with default): overlay actual data and
smoothing spline curve in one plot.}

\item{auto.shift}{\code{\link{logical}} (with default): automatically shift
multiple spectra by their maximum peak. This uses smoothing splines for
better results.}

\item{shift.method}{\code{\link{character}} (with default): when \code{integral}
the peaks are shifted by the maximum intensity of the integral.
Alternatively, \code{deriv} can be used to shift the spectra by the minimum of the
first derivative. By default, \code{ccf} is used which computes the
cross-correlation of two univariate series (see \code{\link{ccf}}).}

\item{find.peaks}{\code{\link{logical}} (with default): find and plot peaks
(\code{TRUE/FALSE}).}

\item{peak.range}{\code{\link{integer}} (with default): range of magnetic
field intensities or g-values in which peaks are picked from \code{c(from,
to)}. If no values are provide the whole spectrum is analysed.}

\item{peak.threshold}{\code{\link{integer}} (with default): threshold value
specifying the resolution of the peak finding routine (see details).}

\item{peak.information}{\code{\link{logical}} (with default): plot peak
intensity values for peaks found by the automated routine
(\code{TRUE/FALSE}). Applies only when \code{find.peaks = TRUE}.}

\item{info}{\code{\link{character}}: add information on experimental details
as subtitle}

\item{plot}{\code{\link{logical}} (with default): show plot
(\code{TRUE/FALSE}).}

\item{add}{\code{\link{logical}} (with default): whether derivatives and/or
integrands are added to the spectrum or are shown separately
(\code{TRUE/FALSE}).}

\item{\dots}{Further plot arguments to pass.}
}
\value{
Returns terminal output and a plot. In addition, a list is returned
containing the following elements:

\item{data}{list containing the (modified) input data} \item{splines}{list
containing the spline objects} \item{auto.peaks}{data frame containing the
peak information (magnetic field and ESR intensity) found by the peak find
routine.}
}
\description{
Function to plot an ESR spectrum and finding peaks using an automated
routine.
}
\details{
\bold{Status} \cr\cr In progress
}
\note{
In progress
}
\examples{


##load example data
data(ExampleData.ESRspectra, envir = environment())

##plot dpph and use the automatic peak finding routine
plot_Spectrum(ExampleData.ESRspectra$dpph, find.peaks = TRUE,
                 peak.range = c(3340,3355),
                 peak.threshold = 10, peak.information = TRUE,
                 verbose = TRUE)

##plot the mollusc (sample Ba01) natural ESR spectrum with a smoothing spline
plot_Spectrum(ExampleData.ESRspectra$Ba01_00,
                 smooth.spline = TRUE,
                 smooth.spline.df = 40,
                 overlay = TRUE)

##plot all ESR spectra of sample Ba01
plot_Spectrum(ExampleData.ESRspectra$Ba01)

##plot all ESR spectra of sample Ba01 and align curves by the max peak
plot_Spectrum(ExampleData.ESRspectra$Ba01,
                 auto.shift = TRUE)

##plot all ESR spectra of sample Ba01, use smoothing splines and
##align curves by the max peak
plot_Spectrum(ExampleData.ESRspectra$Ba01,
                 smooth.spline = TRUE,
                 smooth.spline.df = 40,
                 auto.shift = TRUE,
                 overlay = FALSE)


}
\seealso{
\code{\link{plot}}
}
\author{
Christoph Burow, University of Cologne (Germany)
}
