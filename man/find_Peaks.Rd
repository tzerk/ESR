% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/find_peaks.R
\name{find_Peaks}
\alias{find_Peaks}
\title{A simple peak finding algorithm for ESR spectra}
\usage{
find_Peaks(x, interval, th = 10)
}
\arguments{
\item{x}{\code{\link{data.frame}} (required): a two column \link{data.frame} or \link{data.table}}

\item{interval}{\code{\link{numeric}}: a vector of length two specifying
the range of x-values where peaks are searched}

\item{th}{\code{\link{numeric}}: an integer specifying the number of neighbouring values
to compare each x-value to}
}
\value{
A \link{data.table} containing the x- and y-values of each peak is returned.
}
\description{
This is a simple algorithm to determine local minima and maxima of ESR spectra, but
can also be used for various other kind of data.
}
\details{
The algorithm characterises a peak by comparing the y-value at each x-value to its neighbouring y-values.
The threshold value specified by \code{th} determines to how many neighbours the value 
is compared to, so that lower values of \code{th} yield more peaks than higher
threshold values.
}
\examples{

# Import Bruker ELEXSYS500 spectrum (ASCII)
file <- system.file("extdata", "dpph.ASC", package = "ESR")
spec <- read_Spectrum(file)

# Use the function
peaks1 <- find_Peaks(spec)

# Since spec is an object of class ESR.Spectrum, you can also use
# its get-method
peaks2 <- spec$get_peaks()

identical(peaks1, peaks2)

}
\author{
Christoph Burow, University of Cologne (Germany)
}
